name: DeploymentsEXm
run-name: ${{ github.actor }} is testing out Deployement ðŸš€

on:
  push:
    branches: [ "master", "dev" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: "8.11"
      - name: Run tests
        run: ./gradlew test
      - name: Run build
        run: ./gradlew build
     

      # - run: mkdir hello
      # - run: echo hello > hello/world.txt
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs
     
  deploy-dev:
    needs: [build-and-test]
    if: github.ref == 'refs/heads/dev'
      
    runs-on: ubuntu-latest
    environment: 
      name: dev
      url: https://github.com/${{ github.repository }}/releases/tag/v${{ vars.DEV_VERSION }}    
    
    steps:
      - name: Download candidate artifacts
        uses: actions/download-artifact@v4    
        with:
          name: build-artifacts 
    
      - name: release to dev
        uses: softprops/action-gh-release@v2
        with: 
          tag_name: v${{ vars.DEV_VERSION }}
          # The fine-grained token must have at least one of the following permission sets:
          # "Contents" repository permissions (write)
          # "Contents" repository permissions (write) and "Workflows" repository permissions (write)
          token: ${{ secrets.DEV_TOKEN }}
          prerelease: true
          draft: true
          name: dev
          files: demo.jar           
  
  deploy-prod:
    needs: [build-and-test]
    if: github.ref == 'refs/heads/master' 
    
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://github.com/${{ github.repository }}/releases/tag/v${{ vars.PROD_VERSION }}
      
    steps:      
      - name: Download candidate artifacts
        uses: actions/download-artifact@v4 
        with:
          name: build-artifacts    
        
      - name: GH Release
        uses: softprops/action-gh-release@v2
        with: 
          tag_name: v${{ vars.PROD_VERSION }}
          token: ${{ secrets.PROD_TOKEN }}
          generate_release_notes: true
          name: Production
          files: demo.jar
